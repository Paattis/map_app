services:
  frontend:
    build: 
      context: ./mapfrontend
      args:
        - REACT_APP_DJANGO_URL=${REACT_APP_DJANGO_URL}
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
    env_file:
      - ./.env.prod
    ports:
      - 3000:3000
    volumes:
      - frontend_volume:/src/frontend/build
  backend:
    build: ./mapbackend
    entrypoint: /src/backend/entrypoint.prod.sh
    volumes:
      - ./mapbackend:/src/backend/
      - static_volume:/src/backend/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    environment:
      - DJANGO_DEBUG=0
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgis/postgis:16-3.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h db"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
  nginx:
    build: ./nginx
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend
    volumes:
      - static_volume:/src/backend/staticfiles
      - frontend_volume:/src/frontend/build

volumes:
  postgres_data:
  static_volume:
  frontend_volume:
